
#user  nobody;
worker_processes  1;

#error_log  logs/error.log  error;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
	worker_connections  1024;
}


http {
	include       mime.types;
	default_type  application/octet-stream;

	#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
	#                  '$status $body_bytes_sent "$http_referer" '
	#                  '"$http_user_agent" "$http_x_forwarded_for"';

	#access_log  logs/access.log  main;

	sendfile        on;
	#tcp_nopush     on;

	#keepalive_timeout  0;
	keepalive_timeout  65;

	#gzip  on;

	init_by_lua 'monarch = require "monarch"';

	# Change this to the list of monarch servers
	upstream monarch_backend {
		server localhost:8000;
	}

	# Change this to the list of API servers
	upstream api_backend {
		server localhost:8080;
	}

	server {
		listen       80;
		server_name  localhost;

		#access_log  logs/host.access.log  main;

		location / {
			set $provider_key "XXXX";
			set $shared_secret "XXXX";

			set $test  "";

			# Analytics variables that carry over to post action
			set $provider_id "";
			set $application_id "";
			set $client_id "";
			set $service_id "";
			set $service_version "";
			set $operation_name "";
			set $reason "";
			set $token_id "";
			set $user_id "";
			set $bytes_received 0;
			set $real_path "";
			set $real_args "";

			# CORS
			if ($request_method = OPTIONS) {
				set $test  "1";
			}

			# Change this to the expected API hostname:port
			if ($http_origin ~* (localhost\:80)) {
				set $test  "${test}1";
			}

			if ($test = 11) {
				add_header "Access-Control-Allow-Origin" $http_origin;
				add_header 'Access-Control-Allow-Methods' 'GET, POST, HEAD, OPTIONS, DELETE, PUT, PATCH';
				add_header 'Access-Control-Allow-Headers' 'Content-Type, Accept, Origin, Access-Control-Request-Method, Access-Control-Request-Headers, Api-Key, X-Api-Key, Authorization';
				add_header 'Access-Control-Allow-Credentials' 'true';
				add_header 'Access-Control-Max-Age' '1728000';
				return 200;
			}

			# Proxy config
			# If a load balancer is enabled in Monarch, this value will be overridden.
			set $target "api_backend";
			access_by_lua "monarch.authenticate()";

			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $remote_addr;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Forwarded-Path $uri;
			proxy_pass   http://$target;

			post_action /monarch_post_action;
		}

		#
		# INTERNAL MONARCH LOCATIONS
		#

		location = /monarch_auth {
			internal;

			proxy_pass http://monarch_backend/service/v1/requests/authenticate;
			proxy_set_header  Host "monarch_backend:8000";
			proxy_set_header  X-Environment-Id "XXXX";
			proxy_set_header  Accept "application/json";
			proxy_set_header  Content-Type "application/json";
			proxy_set_header  Authorization $authorization;
		}

		location = /monarch_traffic {
			internal;

			proxy_pass http://monarch_backend/analytics/v1/traffic/events;
			proxy_set_header  Host "monarch_backend:8000";
			proxy_set_header  X-Environment-Id "XXXX";
			proxy_set_header  Accept "application/json";
			proxy_set_header  Content-Type "application/json";
			proxy_set_header  Authorization $authorization;
		}

		location = /monarch_post_action {
			internal;
			set $authorization "";

			content_by_lua "monarch.send_traffic()";
		}

		#error_page  404              /404.html;

		# redirect server error pages to the static page /50x.html
		#
		error_page   500 502 503 504  /50x.html;
		location = /50x.html {
			root   html;
		}

		# proxy the PHP scripts to Apache listening on 127.0.0.1:80
		#
		#location ~ \.php$ {
		#    proxy_pass   http://127.0.0.1;
		#}

		# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
		#
		#location ~ \.php$ {
		#    root           html;
		#    fastcgi_pass   127.0.0.1:9000;
		#    fastcgi_index  index.php;
		#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
		#    include        fastcgi_params;
		#}

		# deny access to .htaccess files, if Apache's document root
		# concurs with nginx's one
		#
		#location ~ /\.ht {
		#    deny  all;
		#}
	}


	# another virtual host using mix of IP-, name-, and port-based configuration
	#
	#server {
	#    listen       8000;
	#    listen       somename:8080;
	#    server_name  somename  alias  another.alias;

	#    location / {
	#        root   html;
	#        index  index.html index.htm;
	#    }
	#}


	# HTTPS server
	#
	#server {
	#    listen       443 ssl;
	#    server_name  localhost;

	#    ssl_certificate      cert.pem;
	#    ssl_certificate_key  cert.key;

	#    ssl_session_cache    shared:SSL:1m;
	#    ssl_session_timeout  5m;

	#    ssl_ciphers  HIGH:!aNULL:!MD5;
	#    ssl_prefer_server_ciphers  on;

	#    location / {
	#        root   html;
	#        index  index.html index.htm;
	#    }
	#}

}
